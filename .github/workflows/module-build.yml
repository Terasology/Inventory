name: Build, Test, and Upload Artifacts

on:
  push:
    branches:
      - develop
      - master
  pull_request:

jobs:
  build:
    name: Build / Test / Publish
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Engine
          uses: actions/checkout@v2
          with:
            repository: MovingBlocks/Terasology
        - uses: actions/cache@v1
          name: Restore gradle cache
          with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
            restore-keys: |
              ${{ runner.OS }}-gradle-${{ env.cache-name }}-
              ${{ runner.OS }}-gradle-
              ${{ runner.OS }}-
        - uses: actions/cache@v1
          name: Restore gradle wrapper
          with:
            path: ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        - name: Checkout Module
          uses: actions/checkout@v2
          with:
            path: modules/${{ github.event.repository.name }}
        - name: Set up JDK 8
          uses: actions/setup-java@v1
          with:
            java-version: 8
        - name: Refresh Module Build Files
          run: ./groovyw module refresh
        - name: Get module version
          run: echo ::set-env name=MODULE_VERSION::$(./gradlew :modules:${{ github.event.repository.name }}:properties | grep "version:" | awk '{print $2}')
          shell: bash
        - name: Build module JAR
          run: ./gradlew :modules:${{ github.event.repository.name }}:jar
        - name: Test
          run: ./gradlew :modules:${{ github.event.repository.name }}:test
        - name: Check
          run: ./gradlew :modules:${{ github.event.repository.name }}:check
          continue-on-error: true
        - name: Upload Build Artifact
          uses: actions/upload-artifact@v2
          with:
            name: ${{ github.event.repository.name }}-${{ env.MODULE_VERSION }}.jar
            path: modules/${{ github.event.repository.name }}/build/libs/${{ github.event.repository.name }}-${{ env.MODULE_VERSION }}.jar
            shell: bash
